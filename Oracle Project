CREATE TABLE MOVIE (
MovieID CHAR(7) NOT NULL,
Title VARCHAR (105) NOT NULL,
Age VARCHAR (3) NOT NULL, ReleaseYear Number(4,0) NOT NULL, IMDb NUMBER (2,1) NOT NULL, RottenTomatoes NUMBER(3,2) NOT NULL, Runtime NUMBER (3,0) NOT NULL,
Netflix NUMBER (1,0) NOT NULL, HULU NUMBER (1,0) NOT NULL, Prime NUMBER(1,0) NOT NULL, DisneyPlus NUMBER (1,0) NOT NULL,
CONSTRAINT MOVIE_PK PRIMARY KEY (MovieID) );

CREATE TABLE DIRECTOR( DirectorID CHAR(7) NOT NULL, FirstName VARCHAR(15) NOT NULL, MiddleName VARCHAR (15), LastName VARCHAR (30),
Suffix VARCHAR (5),
CONSTRAINT DIRECTOR_PK PRIMARY KEY (DirectorID) );

CREATE TABLE MOVIEDIRECTOR( MovieID CHAR(7) NOT NULL, DirectorID CHAR(7) NOT NULL,
CONSTRAINT MOVIEDIRECTOR_PK PRIMARY KEY (MovieID, DirectorID) );

CREATE TABLE GENRE(
MovieID CHAR(7) NOT NULL,
Genre VARCHAR(15) NOT NULL,
CONSTRAINT GENRE_PK PRIMARY KEY (MovieID, Genre) );

CREATE TABLE LANGUAGE( MovieID CHAR(7) NOT NULL, Language VARCHAR(25) NOT NULL,
CONSTRAINT LANGUAGE_PK PRIMARY KEY (MovieID, Language) );

CREATE TABLE COUNTRY(
MovieID CHAR(7) NOT NULL,
COUNTRY VARCHAR(30) NOT NULL,
CONSTRAINT COUNTRY_PK PRIMARY KEY (MovieID, Country) );


--Question 1, Part 1 (Movies Netflix Should Carry)

SELECT Title
FROM MOVIE JOIN LANGUAGE ON MOVIE.MovieID = LANGUAGE.MovieID JOIN GENRE ON MOVIE.MovieID = GENRE.MovieID JOIN COUNTRY ON MOVIE.MovieID = COUNTRY.MovieID
WHERE IMDB > (SELECT AVG (IMDB) FROM MOVIE) AND RottenTomatoes > (SELECT AVG (RottenTomatoes) FROM MOVIE) AND (2020 - ReleaseYear > 1)
GROUP BY Title
ORDER BY Title ASC;

--Question 1, Part 2 (Movies Hulu Should Carry)

SELECT Title
FROM MOVIE JOIN LANGUAGE ON MOVIE.MovieID = LANGUAGE.MovieID JOIN GENRE ON MOVIE.MovieID = GENRE.MovieID JOIN COUNTRY ON MOVIE.MovieID = COUNTRY.MovieID
WHERE Language = 'English' AND Country = 'United States' AND IMDB > (SELECT AVG (IMDB) FROM MOVIE) AND RottenTomatoes > (SELECT AVG (RottenTomatoes) FROM MOVIE) AND (2020 - ReleaseYear > 1)
GROUP BY Title
ORDER BY Title ASC;

--Question 1, Part 3 (Movies Prime Video Should Carry)

SELECT Title
FROM MOVIE JOIN LANGUAGE ON MOVIE.MovieID = LANGUAGE.MovieID JOIN GENRE ON MOVIE.MovieID = GENRE.MovieID JOIN COUNTRY ON MOVIE.MovieID = COUNTRY.MovieID
WHERE Language = 'English' AND Country = 'United States' AND IMDB > (SELECT AVG (IMDB) FROM MOVIE) AND RottenTomatoes > (SELECT AVG (RottenTomatoes) FROM MOVIE)
GROUP BY Title
ORDER BY Title ASC;

--Question 1, Part 4 (Movies Disney Plus Should Carry)
    
SELECT Title
FROM MOVIE JOIN LANGUAGE ON MOVIE.MovieID = LANGUAGE.MovieID JOIN GENRE ON MOVIE.MovieID = GENRE.MovieID JOIN COUNTRY ON MOVIE.MovieID = COUNTRY.MovieID
WHERE Language = 'English' AND Country = 'United States' AND Genre IN ('Animation','Comedy') AND Age IN ('7+', '13+')
GROUP BY Title
ORDER BY Title ASC;

--Question 2, Part 1 (Average Rotten Tomatoes Rating By Streaming Service)

SELECT 'Prime', AVG(RottenTomatoes) AS RT_Prime FROM MOVIE
WHERE Prime = 1
UNION
SELECT 'HULU', AVG(RottenTomatoes) AS RT_HULU FROM MOVIE
WHERE HULU = 1
UNION
SELECT 'Netflix', AVG(RottenTomatoes)AS RT_NETFLIX FROM MOVIE
WHERE NETFLIX = 1
UNION
SELECT 'Disney+', AVG(RottenTomatoes) AS RT_DISNEYPLUS FROM MOVIE
WHERE DISNEYPLUS = 1;

-- Question 2, Part 2 (Average IMDb Rating By Streaming Service)

SELECT 'Prime', AVG(IMDB) AS IMDB_Prime FROM MOVIE
WHERE Prime = 1
UNION
SELECT 'HULU', AVG(IMDB) AS IMDB_HULU FROM MOVIE
WHERE HULU = 1
UNION
SELECT 'Netflix', AVG(IMDB)AS IMDB_NETFLIX FROM MOVIE
WHERE NETFLIX = 1
UNION
SELECT 'Disney+', AVG(IMDB) AS IMDB_DISNEYPLUS FROM MOVIE
WHERE DISNEYPLUS = 1;

-- Question 3

SELECT MovieID, Title, IMDB, RottenTomatoes*100 || '%' AS Rotten_Tomatoes, EXTRACT(YEAR FROM CURRENT_DATE) - ReleaseYear AS AGE, Netflix, HULU, DisneyPLUS, PRIME
FROM MOVIE
WHERE IMDB < (SELECT AVG(IMDB) FROM MOVIE)
INTERSECT
SELECT MovieID, Title, IMDB, RottenTomatoes*100 || '%' AS Rotten_Tomatoes, EXTRACT(YEAR FROM CURRENT_DATE) - ReleaseYear AS AGE, Netflix, HULU, DisneyPLUS, PRIME
FROM MOVIE
WHERE RottenTomatoes < (SELECT AVG(RottenTomatoes)
FROM MOVIE)
INTERSECT
SELECT MovieID, Title, IMDB, RottenTomatoes*100 || '%' AS Rotten_Tomatoes, EXTRACT(YEAR FROM CURRENT_DATE) - ReleaseYear AS AGE, Netflix, HULU, DisneyPLUS, PRIME
FROM MOVIE
WHERE (EXTRACT(YEAR FROM CURRENT_DATE) - ReleaseYear) > (SELECT AVG(EXTRACT(YEAR FROM CURRENT_DATE) - ReleaseYear) AS Age
FROM MOVIE);

-- Question 4

SELECT (CASE
WHEN Age IN ('all') THEN 'All Ages'
WHEN age IN ('all', '7+') THEN '7+'
WHEN age IN ('all', '7+', '13+') THEN '13+'
WHEN age IN ('all', '7+', '13+', '16+', '18+') THEN '18+'
END) AS AgeRating, COUNT(MOVIE.MovieID) AS TotalMovies FROM MOVIE
GROUP BY CASE
WHEN Age IN 'all' THEN 'All Ages'
WHEN age IN ('all', '7+') THEN '7+'
WHEN age IN ('all', '7+', '13+') THEN '13+'
WHEN age IN ('all', '7+', '13+', '16+', '18+') THEN '18+'
END
ORDER BY TotalMovies DESC;

--Question 5 (Which Streaming Service is the Best Value)

SELECT (CASE
WHEN Netflix = 1 THEN 'Netflix'
WHEN Hulu = 1 THEN 'Hulu'
WHEN Prime = 1 THEN 'Amazon Prime'
WHEN DisneyPlus = 1 THEN 'Disney Plus'
END) AS StreamingService, COUNT(MovieID) AS MoviesAvaliable FROM MOVIE
GROUP BY CASE
WHEN Netflix = 1 THEN 'Netflix'
WHEN Hulu = 1 THEN 'Hulu'
WHEN Prime = 1 THEN 'Amazon Prime'
WHEN DisneyPlus = 1 THEN 'Disney Plus'
END
ORDER BY MoviesAvaliable DESC;
